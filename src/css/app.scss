// TODO: Make a debug switch that just outlines everything it would block in red.

// IDs for audiobooks (href="/section/ID")
$audiobookShelfIds:
'0JQ5DAnM3wGh0gz1MXnue2'; // Audiobooks For You

// IDs for podcasts (href="/section/ID")
$podcastShelfIds:
'0JQ5DAnM3wGh0gz1MXnu4i', // Spotify Original Podcasts
'0JQ5DAnM3wGh0gz1MXnu9e', // Episodes For You
'0JQ5DAnM3wGh0gz1MXnuk0', // Geopolitical Analysis Episodes For You
'0JQ5DAnM3wGh0gz1MXnuk1', // Media Scrutiny Episodes For You
'0JQ5DAnM3wGh0gz1MXnuk2', // UK Politics Episodes For You
'0JQ5DAnM3wGh0gz1MXnujZ', // Family Drama Episodes For You
'0JQ5DAnM3wGh0gz1MXnuk3', // Current Events Episodes For You
'0JQ5DAnM3wGh0gz1MXnu3L', // Shows To Try
// https://github.com/theRealPadster/spicetify-hide-podcasts/issues/135
'0JQ5DAnM3wGh0gz1MXnu3N',
'0JQ5DAnM3wGh0gz1MXnu4z',
'0JQ5DAnM3wGh0gz1MXnu4B',
'0JQ5DAnM3wGh0gz1MXnu4x',
'0JQ5DAnM3wGh0gz1MXnu4y',
'0JQ5DAnM3wGh0gz1MXnu3P';

// The nearby shelves seem to freak out and constantly show/hide if I use display:none, since
// React culls the elements and the :has selector no longer applies,
// causing the shelves to be visible again. Then it culls them again, and so on.
// If I use visiblity instead, it does hide them, but since the element is still technically there,
// it leaves behind the `gap` in the grid.
@mixin hide-visibility {
  visibility: hidden;
  height: 0;
  min-height: unset;
  margin: 0;
}

@mixin hide-display {
  display: none !important;
}

.hide-podcasts-enabled {
  // Items I've tagged via JS
  .podcast-item {
    @include hide-display();
  }

  // Podcasts tab in Your Library page
  .queue-tabBar-header a[href="/collection/podcasts"] {
    @include hide-display();
  };

  // Fallback for shelves that have podcasts in them
  // (These leave behind a gap)
  .main-shelf-shelf:has(a[href^="/episode/"]),
  .main-shelf-shelf:has(a[href^="/show/"]) {
    @include hide-visibility();
  }

  // Specific shelves that have podcasts in them
  // (These don't leave a gap)
  @each $shelfId in $podcastShelfIds {
    .main-shelf-shelf:has(a[href*="#{$shelfId}"]) {
      @include hide-display();
    }
  }

  // Podcasts categories on search page
  // Old style
  .x-categoryCard-CategoryCard[href="/genre/podcasts-web"],
  // == (Spotify 1.2.26.1187.g36b715a1) ==
  // "Podcasts"
  .x-categoryCard-CategoryCard[href="/genre/0JQ5DArNBzkmxXHCqFLx2J"],
  // "Podcast Charts"
  .x-categoryCard-CategoryCard[href="/genre/0JQ5DAB3zgCauRwnvdEQjJ"],
  // "Educational"
  .x-categoryCard-CategoryCard[href="/genre/0JQ5IMCbQBLl5gxKLgufp8"],
  // "Documentary"
  .x-categoryCard-CategoryCard[href="/genre/0JQ5IMCbQBLjfX9OdDrA5X"],
  // "Comedy"
  .x-categoryCard-CategoryCard[href="/genre/0JQ5IMCbQBLyUJhSxhaPc6"] {
    @include hide-display();
  }

  // "Your Episodes" in sidebar
  .main-yourLibraryX-listItem:has(#listrow-title-spotify\:collection\:your-episodes) {
    @include hide-display();
  }
}

.hide-audiobooks-enabled {
  // Items I've tagged via JS
  .audiobook-item {
    @include hide-display();
  }

  // Specific shelves that have audiobooks in them
  // (These don't leave a gap)
  @each $shelfId in $audiobookShelfIds {
    .main-shelf-shelf:has(a[href*="#{$shelfId}"]) {
      @include hide-display();
    }
  }

  // Audiobooks category on search page
  // As of Spotify 1.2.26.1187.g36b715a1
  .x-categoryCard-CategoryCard[href="/genre/0JQ5DAqbMKFETqK4t8f1n3"] {
    @include hide-display();
  }
}
